import Title from "./Title";
import ProjectsCard from "./ProjectsCard";
import { projectOne, projectThree, projectTwo } from "../assets";
import { FadeIn } from "./FadeIn";

const Projects = () => {
  return (
    <section
      id="projects"
      className="w-full py-20 border-b-[1px] border-b-gray-700"
    >
      <FadeIn>
        <div className="flex justify-center items-center text-center">
          <Title
            title="VISIT MY PORTFOLIO AND GIVE ME YOUR FEEDBACK"
            des="My Projects"
          />
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-2 gap-8 xl:gap-12 px-4">
          {/* <ProjectsCard
            title="
            Speak2Order: AI-Powered Voice Ordering Assistant"
            des="The primary goal of Speak2Order is to enable users, including those with disabilities or accessibility challenges, to order effortlessly through a conversational AI system. 
              By dynamically filtering products based on ratings, discounts, and delivery speed, the system ensures an optimized and personalized shopping experience while reducing the complexity of navigating multiple apps."
            title2="Key Features"
            des2={`âœ” Conversational AI Interface â€“ Voice-command-based ordering
âœ” Multi-Category Ordering â€“ Supports food, groceries, fashion, and more
âœ” Smart Filtering System â€“ Ranks products based on ratings, discounts, and delivery time
âœ” Cross-Platform Integration â€“ Fetches best deals from Swiggy, Zomato, Flipkart, etc.
âœ” Real-Time Order Tracking & Secure Payment Processing
ðŸ”¹ Tech Stack: ASP.NET Web API, React.js, Tailwind CSS, C#, SQL Server`}
            src={projectOne}
            GithubLink="https://github.com/yourusername/speak2order"
          /> */}
          <ProjectsCard
            title="Young Masters Chess Club"
            des="An AI-driven chess coaching platform designed for young children to learn chess interactively. It offers AI-assisted training, engaging tournaments, and real-time coaching sessions to make learning fun and effective."
            title2="Key Features"
            des2={`âœ” AI Chess Trainer â€“ Skill-based difficulty assessment
âœ” Live Classes & Scheduling â€“ Google Calendar integration
âœ” Tournaments & Leaderboards â€“ Tracks player rankings dynamically
âœ” Parent Dashboard â€“ Monitors progress with performance reports
âœ” Secure Authentication & Gamification Elements
ðŸ”¹ Tech Stack: ASP.NET Core, React.js, SQL Server, Stockfish/Lichess API`}
            src={projectTwo}
            GithubLink="https://github.com/Bhuvancode200"

          />

          <ProjectsCard
            title="Online School Management System"
            des="A web-based platform designed to improve school management by centralizing student data, attendance records, and communication between teachers, students, and parents. It ensures a smooth and organized approach to school operations."
            title2="Key Features"
            des2={`âœ” Student & Teacher Management â€“ Secure record system
âœ” Authentication & Role-Based Access â€“ Separate dashboards
âœ” Attendance & Grade Tracking â€“ Automated performance records
âœ” Parent-Teacher Communication â€“ Messaging & updates
âœ” Scalable & Responsive UI for seamless experience
ðŸ”¹ Tech Stack: ASP.NET Web API, React.js, SQL Server`}
            src={projectThree}
            GithubLink="https://github.com/Bhuvancode200/Online-School-Management-System"

          />
          <ProjectsCard
  title="Generic Repository Pattern in ASP.NET Core"
  des="This project demonstrates a scalable and reusable Generic Repository Pattern using ASP.NET Core and Entity Framework Core. 
    It provides a structured way to manage database operations with better separation of concerns, making it easier to maintain and extend."
  title2="Key Features"
  des2={`âœ” Generic Repository Implementation â€“ Centralized CRUD operations for multiple entities
âœ” Dependency Injection â€“ Decoupled and modular repository design
âœ” Entity Framework Core Integration â€“ Efficient database interactions
âœ” RESTful API â€“ Standardized API structure with Swagger documentation
âœ” Scalable & Maintainable Architecture â€“ Encourages clean code and best practices
ðŸ”¹ Tech Stack: ASP.NET Core Web API, Entity Framework Core, C#, SQL Server`}
  src={projectOne}
  GithubLink="https://github.com/Bhuvancode200/Generic-Repository" // Add this line

/>


          {/* <ProjectsCard
            title="Hospital Management System"
            des="A modern healthcare platform for managing patient records, doctor schedules, and billing efficiently."
            title2="Key Features"
            des2={`âœ” Patient Registration & Electronic Health Records (EHR)
âœ” Doctor & Staff Scheduling â€“ Manages availability
âœ” Billing & Invoicing â€“ Automated medical billing
âœ” Role-Based Access Control â€“ Secure permissions
âœ” Prescription & Lab Reports â€“ Digital records
âœ” User Authentication & Security
ðŸ”¹ Tech Stack: ASP.NET Core Web API, React.js, Bootstrap, SQL Server`}
            src={projectThree}
            GithubLink="https://github.com/yourusername/speak2order"
          /> */}
        </div>
      </FadeIn>
    </section>
  );
};

export default Projects;
